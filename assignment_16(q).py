# -*- coding: utf-8 -*-
"""Assignment-16(Q).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yzwvPqvk23YrU94zKKVBcbKEroHLQpwI
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
import random

mu_x = np.random.random()*10
mu_y = np.random.random()*10
sigma_x = np.random.random()*10
sigma_y = np.random.random()*10
rho = np.random.random()

mean = [mu_x, mu_y]
covariance = [[sigma_x**2, rho*sigma_x*sigma_y],[rho*sigma_x*sigma_y, sigma_y**2]]

simlen = int(1e6)

samples = np.random.multivariate_normal(mean, covariance, simlen)

random_y = random.gauss(mu_y, sigma_y)
# random_y = mu_y

x_given_y = [elem[0] for elem in samples if elem[1] <= random_y + 0.1 and elem[1] >= random_y - 0.1]
plt.hist(x_given_y, 100, density=1)
std = np.std(x_given_y) 
mean = np.mean(x_given_y)   
x = np.linspace(mean - 3*std, mean + 3*std, 100)
plt.plot(x, stats.norm.pdf(x, mean, std))
plt.legend(["Theoretical Gaussian distribution of X", "Simulated distribution of X"])
plt.xlabel("$X$")
plt.ylabel("$f(X|Y)$")
plt.show()