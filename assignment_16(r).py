# -*- coding: utf-8 -*-
"""Assignment-16(R).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10ajHJbRwO2qD76cakaT7p9kdgC-ID5PL
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as stats
import random

mu_x = 4
mu_y = 1
sigma_x = 2
sigma_y = 5
mu_z = mu_x + mu_y
sigma_z = (sigma_x**2 + sigma_y**2)**0.5
rho = 0.5

mean = [mu_x, mu_y]
covariance = [[sigma_x**2, rho*sigma_x*sigma_y],[rho*sigma_x*sigma_y, sigma_y*2]]

simlen = int(1e6)

samples_1 = np.random.multivariate_normal(mean, covariance, simlen)
samples_2 = samples_1.T
samples_2[1] = samples_2[1] + samples_2[0]
samples_2 = samples_2.T
random_y = random.gauss(mu_y, sigma_y)
random_z = random.gauss(mu_z, sigma_z)
# random_y = mu_y
x_given_y = [x for x,y in samples_1 if y<=random_y+0.1 and y>=random_y-0.1]
x_given_z = [x for x,z in samples_2 if z<=random_z+0.1 and z>=random_z-0.1]
plt.hist(x_given_z, 100, density=1)
std = np.std(x_given_z) 
avg = np.mean(x_given_z)   
x = np.linspace(avg - 3*std, avg + 3*std, 100)
plt.plot(x, stats.norm.pdf(x, avg, std))
plt.legend(["Theoretical Gaussian distribution of X", "Simulated distribution of X"])
plt.xlabel("$X$")
plt.ylabel("$f(X|X+Y)$")
plt.show()